# -*- indent-tabs-mode: nil -*-
#
# Create common IAM groups for console and API access
#
VERSION(1.4.0)
#
{
  TEMPLATE(`Create IAM Groups'),

  "Parameters" : {
    paramDomain(Domain,`app domain', `devops.dev.cloud.synchronoss.net'),
    paramString(Project, `project',`NOPROJECT'),
    paramString(Environment, `environment',`NOENVIRONMENT')
  },

  "Resources" : {
    mkIamGroup(SysAdmin, `"ec2:*"'),
    mkIamGroup(SysOp, `"ec2:*"', `"ec2:Delete*","ec2:Terminate*"'),
    mkIamGroup(SysRO, `"ec2:Describe*","ec2:List*"'),

    mkIamGroup(RdsAdmin,`"rds:*","ec2:*"'),
    mkIamGroup(RdsOp, `"rds:*","ec2:*"',`"rds:Delete*","rds:Remove*"'),
    mkIamGroup(RdsRO, `"rds:Describe*","rds:List*"'),

    mkIamGroup(CfAdmin,`"cloudformation:*"'),
    mkIamGroup(CfOp, `"cloudformation:*"',
         `"cloudformation:Delete*"'),
    mkIamGroup(CfRO, `"cloudformation:Describe*",
          "cloudformation:List*",
          "cloudformation:Get*",
          "cloudformation:Estimate*"'),


    "ManageMyCredentials" : {
      "Type": "AWS::IAM::Group",
      "Properties": {
      }
    },

    "ManageMyCredentialsPolicy" : {
      "Type" : "AWS::IAM::Policy",
      "Properties" : {
        "Groups" : [ { "Ref" : "ManageMyCredentials" } ],
        "PolicyName": "ManageMyCredentials",
        "PolicyDocument": {
          "Version" : "2012-10-17",
          "Statement": [
            {
              "Sid": "ManageAcessKeys",
              "Effect"   : "Allow",
              "Action"   : [ "iam:*AccessKey", "iam:*AccessKeys" ],
              "Resource": cfnPaste("arn:aws:iam::",
                                   cfnRef(AWS::AccountId),
                                   ":user/${aws:username}")
            },
            {
              "Sid": "AllowUsersToCreateDeleteTheirOwnVirtualMFADevices",
              "Effect": "Allow",
              "Action": ["iam:*VirtualMFADevice"],
              "Resource": cfnPaste("arn:aws:iam::",
                                    cfnRef(AWS::AccountId),
                                   ":mfa/${aws:username}")
            },
            {
              "Sid": "AllowUsersToControlMFA",
              "Effect": "Allow",
              "Action": [
                "iam:CreateVirtualMFADevice",
                "iam:EnableMFADevice",
                "iam:ListMFADevices",
                "iam:ListUsers",
                "iam:ResyncMFADevice",
                "iam:DeactivateMFADevice",
                "iam:ListVirtualMFADevices"
              ],
              "Resource": cfnPaste("arn:aws:iam::",
                                   cfnRef(AWS::AccountId),
                                   ":user/${aws:username}")
            },
            {
              "Sid": "AllowUsersToListVirtualMFADevices",
              "Effect": "Allow",
              "Action": ["iam:ListVirtualMFADevices"],
              "Resource": cfnPaste("arn:aws:iam::",
                                   cfnRef(AWS::AccountId),
                                   ":mfa/*")
            },
            {
              "Sid": "AllowUsersToListUsersInConsole",
              "Effect": "Allow",
              "Action": ["iam:ListUsers"],
              "Resource": cfnPaste("arn:aws:iam::",
                                   cfnRef(AWS::AccountId),
                                   ":user/*")
            }
          ]
        }
      }
    }
  }
}
